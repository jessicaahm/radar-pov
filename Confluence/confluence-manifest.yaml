# Confluence Kubernetes Deployment Manifest
apiVersion: v1
kind: Namespace
metadata:
  name: confluence
---
# PostgreSQL Database for Confluence
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: confluence
type: Opaque
data:
  # confdb / confdb (base64 encoded)
  username: Y29uZmRi
  password: Y29uZmRi
  database: Y29uZmRi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: confluence
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: confluence
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:13
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: confluence
spec:
  selector:
    app: postgresql
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
# Confluence Application
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: confluence-home-pvc
  namespace: confluence
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: confluence-server
  namespace: confluence
spec:
  replicas: 1
  selector:
    matchLabels:
      app: confluence-server
  template:
    metadata:
      labels:
        app: confluence-server
    spec:
      containers:
      - name: confluence-server
        image: atlassian/confluence:latest
        env:
        - name: ATL_JDBC_URL
          value: "jdbc:postgresql://postgresql-service:5432/confdb"
        - name: ATL_JDBC_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: ATL_JDBC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: ATL_DB_TYPE
          value: "postgresql"
        - name: ATL_DB_DRIVER
          value: "org.postgresql.Driver"
        - name: ATL_DB_SCHEMA_NAME
          value: "public"
        - name: JVM_MINIMUM_MEMORY
          value: "2048m"
        - name: JVM_MAXIMUM_MEMORY
          value: "4096m"
        - name: CATALINA_OPTS
          value: "-Xms2048m -Xmx4096m -Datlassian.plugins.enable.wait=300 -Djava.awt.headless=true -XX:+UseG1GC"
        - name: JVM_SUPPORT_RECOMMENDED_ARGS
          value: "-Datlassian.plugins.enable.wait=300"
        ports:
        - containerPort: 8090
        - containerPort: 8091
        volumeMounts:
        - name: confluence-home
          mountPath: /var/atlassian/application-data/confluence
        - name: server-xml-volume
          mountPath: /opt/atlassian/confluence/conf/server.xml
          subPath: server.xml
        resources:
          requests:
            memory: "3Gi"
            cpu: "1"
          limits:
            memory: "5Gi"
            cpu: "2"
        readinessProbe:
          httpGet:
            path: /status
            port: 8090
          initialDelaySeconds: 300
          periodSeconds: 60
          timeoutSeconds: 30
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /status
            port: 8090
          initialDelaySeconds: 400
          periodSeconds: 120
          timeoutSeconds: 30
          failureThreshold: 5
      volumes:
      - name: confluence-home
        persistentVolumeClaim:
          claimName: confluence-home-pvc
      - name: server-xml-volume
        configMap:
          name: confluence-server-xml-file
---
apiVersion: v1
kind: Service
metadata:
  name: confluence-service
  namespace: confluence
spec:
  selector:
    app: confluence-server
  ports:
    - name: http
      protocol: TCP
      port: 8090
      targetPort: 8090
    - name: https
      protocol: TCP
      port: 8091
      targetPort: 8091
  type: ClusterIP
---
# NGINX ConfigMap for reverse proxy configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: confluence
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream confluence-backend {
            server confluence-service:8090;
        }
        
        # HTTPS Server
        server {
            listen 443 ssl;
            server_name _;
            
            # SSL Certificate Configuration
            ssl_certificate /etc/nginx/ssl/tls.crt;
            ssl_certificate_key /etc/nginx/ssl/tls.key;
            
            # SSL Settings
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
            ssl_prefer_server_ciphers off;
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;
            
            location / {
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto https;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass http://confluence-backend;
                client_max_body_size 100M;
                
                # Additional proxy settings for Confluence
                proxy_redirect off;
                proxy_buffering off;
                proxy_connect_timeout 300;
                proxy_send_timeout 300;
                proxy_read_timeout 300;
            }
        }
    }
---
# NGINX Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: confluence
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:stable-perl
        ports:
        - containerPort: 443
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: ssl-certs
          mountPath: /etc/nginx/ssl
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: nginx-config-volume
        configMap:
          name: nginx-config
      - name: ssl-certs
        secret:
          secretName: nginx-tls
---
# NGINX Service
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: confluence
spec:
  selector:
    app: nginx
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
  type: ClusterIP
---
# LoadBalancer Service for external access
apiVersion: v1
kind: Service
metadata:
  name: confluence-loadbalancer
  namespace: confluence
spec:
  type: LoadBalancer
  selector:
    app: confluence-server
  ports:
    - name: http
      protocol: TCP
      port: 8090
      targetPort: 8090
    - name: https-direct
      protocol: TCP
      port: 8091
      targetPort: 8091

